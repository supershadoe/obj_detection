# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx4G -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# Configuration cache skips the configuration phase entirely if the build
# configuration doesn't change between builds
# https://docs.gradle.org/current/userguide/performance.html#enable_configuration_cache
# TODO: config cache not working
#org.gradle.configuration-cache=true
# In case some of the plugins are not fully compatible, warn.
#org.gradle.configuration-cache.problems=warn

# Only configure whatever subproject task is being run (and its dependencies)
# https://docs.gradle.org/current/userguide/multi_project_configuration_and_execution.html
org.gradle.configureondemand=true

# Evaluate tasks of different modules parallely
# Each subproject are linked only through declared dependencies and thus,
# we can use this optimization
# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects
org.gradle.parallel=true

# Use build cache for tasks with same input
# https://docs.gradle.org/current/userguide/performance.html#enable_the_build_cache
org.gradle.caching=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Kotlin code style for this project: "official" or "obsolete"
# Not necessary tbh because ktlint runs its own formatting anyways
kotlin.code.style=official

# Enables namespacing of each library's R class so that its R class includes
# only the resources declared in the library itself and none from the library's
# dependencies, thereby reducing the size of the R class for that library
# https://developer.android.com/build/optimize-your-build#use-non-transitive-r-classes
android.nonTransitiveRClass=true
